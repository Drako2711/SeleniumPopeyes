{"name": "Navegaci√≥n inicial", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 99\nCurrent browser version is 98.0.4758.102 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00EF9943+2595139]\n\tOrdinal0 [0x00E8C9F1+2148849]\n\tOrdinal0 [0x00D84528+1066280]\n\tOrdinal0 [0x00DA42C3+1196739]\n\tOrdinal0 [0x00D9FE37+1179191]\n\tOrdinal0 [0x00D9D6F1+1169137]\n\tOrdinal0 [0x00DD0530+1377584]\n\tOrdinal0 [0x00DD018A+1376650]\n\tOrdinal0 [0x00DCB806+1357830]\n\tOrdinal0 [0x00DA6086+1204358]\n\tOrdinal0 [0x00DA6F96+1208214]\n\tGetHandleVerifier [0x0109B232+1658114]\n\tGetHandleVerifier [0x0115312C+2411516]\n\tGetHandleVerifier [0x00F8F261+560433]\n\tGetHandleVerifier [0x00F8E366+556598]\n\tOrdinal0 [0x00E9286B+2173035]\n\tOrdinal0 [0x00E975F8+2192888]\n\tOrdinal0 [0x00E976E5+2193125]\n\tOrdinal0 [0x00EA11FC+2232828]\n\tBaseThreadInitThunk [0x767FFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x772C7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x772C7A6E+238]", "trace": "inst = <class 'UnitTestPopeyes.PopeyesTests.LoginTest.LoginAccount'>\n\n    @classmethod\n    def setUp(inst):\n        with allure.step(u\"Iniciar el controlador de Chrome\"):\n            options = webdriver.ChromeOptions()\n            options.add_experimental_option('excludeSwitches', ['enable-logging'])\n            #inst.driver = webdriver.Chrome(service=Service(\"D:\\\\PROYECTOS CICLO IX\\\\SELENIUM\\\\Drivers\\\\chromedriver.exe\"),options=options)\n>           inst.driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()),options=options)\n\nLoginTest.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:70: in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\nC:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:93: in __init__\n    RemoteWebDriver.__init__(\nC:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:268: in __init__\n    self.start_session(capabilities, browser_profile)\nC:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:359: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\nC:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002B0B8B9F250>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x772C7A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x772C7A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 99\nE       Current browser version is 98.0.4758.102 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00EF9943+2595139]\nE       \tOrdinal0 [0x00E8C9F1+2148849]\nE       \tOrdinal0 [0x00D84528+1066280]\nE       \tOrdinal0 [0x00DA42C3+1196739]\nE       \tOrdinal0 [0x00D9FE37+1179191]\nE       \tOrdinal0 [0x00D9D6F1+1169137]\nE       \tOrdinal0 [0x00DD0530+1377584]\nE       \tOrdinal0 [0x00DD018A+1376650]\nE       \tOrdinal0 [0x00DCB806+1357830]\nE       \tOrdinal0 [0x00DA6086+1204358]\nE       \tOrdinal0 [0x00DA6F96+1208214]\nE       \tGetHandleVerifier [0x0109B232+1658114]\nE       \tGetHandleVerifier [0x0115312C+2411516]\nE       \tGetHandleVerifier [0x00F8F261+560433]\nE       \tGetHandleVerifier [0x00F8E366+556598]\nE       \tOrdinal0 [0x00E9286B+2173035]\nE       \tOrdinal0 [0x00E975F8+2192888]\nE       \tOrdinal0 [0x00E976E5+2193125]\nE       \tOrdinal0 [0x00EA11FC+2232828]\nE       \tBaseThreadInitThunk [0x767FFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x772C7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x772C7A6E+238]\n\nC:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: SessionNotCreatedException"}, "description": "Se requiere ingresar a la p√°gina de Popeyes en la secci√≥n de home", "steps": [{"name": "Iniciar el controlador de Chrome", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 99\nCurrent browser version is 98.0.4758.102 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00EF9943+2595139]\n\tOrdinal0 [0x00E8C9F1+2148849]\n\tOrdinal0 [0x00D84528+1066280]\n\tOrdinal0 [0x00DA42C3+1196739]\n\tOrdinal0 [0x00D9FE37+1179191]\n\tOrdinal0 [0x00D9D6F1+1169137]\n\tOrdinal0 [0x00DD0530+1377584]\n\tOrdinal0 [0x00DD018A+1376650]\n\tOrdinal0 [0x00DCB806+1357830]\n\tOrdinal0 [0x00DA6086+1204358]\n\tOrdinal0 [0x00DA6F96+1208214]\n\tGetHandleVerifier [0x0109B232+1658114]\n\tGetHandleVerifier [0x0115312C+2411516]\n\tGetHandleVerifier [0x00F8F261+560433]\n\tGetHandleVerifier [0x00F8E366+556598]\n\tOrdinal0 [0x00E9286B+2173035]\n\tOrdinal0 [0x00E975F8+2192888]\n\tOrdinal0 [0x00E976E5+2193125]\n\tOrdinal0 [0x00EA11FC+2232828]\n\tBaseThreadInitThunk [0x767FFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x772C7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x772C7A6E+238]\n\n", "trace": "  File \"D:\\PROYECTOS CICLO IX\\SELENIUM\\PopeyesPruebas\\UnitTestPopeyes\\PopeyesTests\\LoginTest.py\", line 30, in setUp\n    inst.driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()),options=options)\n  File \"C:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 70, in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n  File \"C:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 93, in __init__\n    RemoteWebDriver.__init__(\n  File \"C:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 268, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"C:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 359, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"C:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 424, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1646602407339, "stop": 1646602416903}], "attachments": [{"name": "log", "source": "bc499277-2de9-4ecf-bf71-04859dd21767-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e187d17a-ebb8-4410-baeb-3cd0d6099eb0-attachment.txt", "type": "text/plain"}], "start": 1646602407339, "stop": 1646602416904, "uuid": "6cc8ba99-f620-4f28-a65e-fc30d6448f4c", "historyId": "89a556409d02e340d1f0d330ca208d61", "testCaseId": "db7cb29b1a501946b1b25b94564c832c", "fullName": "LoginTest.LoginAccount#test_01_nav_ppys", "labels": [{"name": "severity", "value": "minor"}, {"name": "feature", "value": "Log in"}, {"name": "story", "value": "Navegaci√≥n"}, {"name": "suite", "value": "LoginTest"}, {"name": "subSuite", "value": "LoginAccount"}, {"name": "host", "value": "DESKTOP-FT84D78"}, {"name": "thread", "value": "24956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "LoginTest"}]}