{"name": "test_06_address_clean", "status": "broken", "statusDetails": {"message": "NameError: Not found firefox browser,You can enter 'ie', 'ff' or 'chrome'. error: firefox", "trace": "self = <class 'UnitTestPopeyes.PopeyesTests.LoginTest.LoginAccount'>, browser = 'firefox', platform = 'desktop', display = 'a'\n\n    def __init__(self,browser,platform,display):\n        resolution = BasePg.TypePlatform(platform,display)\n        br = \"\"\n        if browser == \"Chrome\" or browser == \"chrome\" or browser == \"CHROME\" or browser == \"ch\":\n            br = \"Google Chrome\"\n            options = webdriver.ChromeOptions()\n            options.add_experimental_option('excludeSwitches', ['enable-logging'])\n            options.add_argument ('disable-infobars')\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            driver = webdriver.Chrome(service=ServiceChrome(ChromeDriverManager().install()),options=options)\n            dis = resolution.split(\"x\")\n            driver.set_window_size(dis[0],dis[1])\n        elif browser == \"Firefox\" or browser == \"firefox\" or browser == \"FIREFOX\" or browser == \"ff\":\n            br = \"Firefox\"\n            options = FirefoxOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = '+resolution)\n            #Para carga de locales\n            options.set_preference(\"geo.prompt.testing\", True)\n            options.set_preference(\"geo.prompt.testing.allow\", False)\n            driver = webdriver.Firefox(service=ServiceFirefox(GeckoDriverManager().install()),options=options)\n        elif browser == \"Edge\" or browser == \"edge\" or browser == \"EDGE\" or browser == \"ed\":\n            br = \"Edge\"\n            options = EdgeOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = '+resolution)\n            driver = webdriver.Edge(service=ServiceEdge(EdgeChromiumDriverManager().install()),options=options)\n        elif browser == \"Opera\" or browser == \"opera\" or browser == \"OPERA\" or browser == \"op\":\n            br = \"Opera\"\n            options = webdriver.ChromeOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = '+resolution)\n            options.add_experimental_option('w3c', True)\n            driver = webdriver.Opera(executable_path=OperaDriverManager().install(),options=options)\n        elif browser == \"IE\" or browser == \"ie\" or browser == \"IEXPLORER\" or browser == \"iex\":\n            br = \"Internet Explorer\"\n            options = IeOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = 1920x1080')\n            driver = webdriver.Ie(service=ServiceIE(IEDriverManager().install()),options=options)\n        try:\n            self.driver = driver\n>           BasePg.set_environment(br,platform,resolution,driver.capabilities['browserVersion'])\n\n..\\PopeyesPage\\BasePage.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbr = 'Firefox', pl = 'desktop', dis = '1366x768', ver = '96.0.2'\n\n    def set_environment(br,pl,dis,ver):\n>       f = open(\"../allure-results/environment.properties\",\"w+\")\nE       FileNotFoundError: [Errno 2] No such file or directory: '../allure-results/environment.properties'\n\n..\\PopeyesPage\\BasePage.py:124: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\ninst = <class 'UnitTestPopeyes.PopeyesTests.LoginTest.LoginAccount'>\n\n    @classmethod\n    def setUp(inst):\n        with allure.step(u\"Iniciar el controlador\"):\n            inst.browser = BasePg.get_option(\"browser\")\n            inst.platform = BasePg.get_option(\"platform\")\n            inst.display = BasePg.get_option(\"display\")\n            print(\"Browser: \"+inst.browser)\n            print(\"Platform: \"+inst.platform)\n            print(\"Display: \"+inst.display)\n            #inst.driver = BasePg.__init__(inst, inst.browser,\"desktop\",\"a\") #browser,platform,display\n>           inst.driver = BasePg.__init__(inst, inst.browser,inst.platform,inst.display) #browser,platform,display\n\nLoginTest.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <class 'UnitTestPopeyes.PopeyesTests.LoginTest.LoginAccount'>, browser = 'firefox', platform = 'desktop', display = 'a'\n\n    def __init__(self,browser,platform,display):\n        resolution = BasePg.TypePlatform(platform,display)\n        br = \"\"\n        if browser == \"Chrome\" or browser == \"chrome\" or browser == \"CHROME\" or browser == \"ch\":\n            br = \"Google Chrome\"\n            options = webdriver.ChromeOptions()\n            options.add_experimental_option('excludeSwitches', ['enable-logging'])\n            options.add_argument ('disable-infobars')\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            driver = webdriver.Chrome(service=ServiceChrome(ChromeDriverManager().install()),options=options)\n            dis = resolution.split(\"x\")\n            driver.set_window_size(dis[0],dis[1])\n        elif browser == \"Firefox\" or browser == \"firefox\" or browser == \"FIREFOX\" or browser == \"ff\":\n            br = \"Firefox\"\n            options = FirefoxOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = '+resolution)\n            #Para carga de locales\n            options.set_preference(\"geo.prompt.testing\", True)\n            options.set_preference(\"geo.prompt.testing.allow\", False)\n            driver = webdriver.Firefox(service=ServiceFirefox(GeckoDriverManager().install()),options=options)\n        elif browser == \"Edge\" or browser == \"edge\" or browser == \"EDGE\" or browser == \"ed\":\n            br = \"Edge\"\n            options = EdgeOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = '+resolution)\n            driver = webdriver.Edge(service=ServiceEdge(EdgeChromiumDriverManager().install()),options=options)\n        elif browser == \"Opera\" or browser == \"opera\" or browser == \"OPERA\" or browser == \"op\":\n            br = \"Opera\"\n            options = webdriver.ChromeOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = '+resolution)\n            options.add_experimental_option('w3c', True)\n            driver = webdriver.Opera(executable_path=OperaDriverManager().install(),options=options)\n        elif browser == \"IE\" or browser == \"ie\" or browser == \"IEXPLORER\" or browser == \"iex\":\n            br = \"Internet Explorer\"\n            options = IeOptions()\n            options.add_argument('--headless')\n            options.add_argument(\"--no-sandbox\")\n            options.add_argument ('window-size = 1920x1080')\n            driver = webdriver.Ie(service=ServiceIE(IEDriverManager().install()),options=options)\n        try:\n            self.driver = driver\n            BasePg.set_environment(br,platform,resolution,driver.capabilities['browserVersion'])\n        except Exception:\n>           raise NameError(\"Not found %s browser,You can enter 'ie', 'ff' or 'chrome'.\" % browser + \" error: \"+browser)\nE           NameError: Not found firefox browser,You can enter 'ie', 'ff' or 'chrome'. error: firefox\n\n..\\PopeyesPage\\BasePage.py:77: NameError"}, "steps": [{"name": "Iniciar el controlador", "status": "broken", "statusDetails": {"message": "NameError: Not found firefox browser,You can enter 'ie', 'ff' or 'chrome'. error: firefox\n", "trace": "  File \"D:\\PROYECTOS CICLO IX\\SELENIUM\\PopeyesPruebas\\UnitTestPopeyes\\PopeyesTests\\LoginTest.py\", line 27, in setUp\n    inst.driver = BasePg.__init__(inst, inst.browser,inst.platform,inst.display) #browser,platform,display\n  File \"D:\\PROYECTOS CICLO IX\\SELENIUM\\PopeyesPruebas\\UnitTestPopeyes\\PopeyesPage\\BasePage.py\", line 77, in __init__\n    raise NameError(\"Not found %s browser,You can enter 'ie', 'ff' or 'chrome'.\" % browser + \" error: \"+browser)\n"}, "start": 1647969271690, "stop": 1647969279447}], "attachments": [{"name": "log", "source": "a567e7d1-0c63-490e-a4f2-d0e22b2934a8-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "bdbee448-1680-41e9-8661-33f6fd8d1510-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "6f17c65c-817c-4b5a-9c30-a5ea37784bc4-attachment.txt", "type": "text/plain"}], "start": 1647969271690, "stop": 1647969279448, "uuid": "d97d2970-7948-4ea5-82d4-0e7682454d31", "historyId": "47a4f59afe6c395f2019d27103d88ba8", "testCaseId": "17944e23c56989aeb8c1f4ca12dbcf06", "fullName": "LoginTest.LoginAccount#test_06_address_clean", "labels": [{"name": "feature", "value": "Log in"}, {"name": "suite", "value": "LoginTest"}, {"name": "subSuite", "value": "LoginAccount"}, {"name": "host", "value": "DESKTOP-FT84D78"}, {"name": "thread", "value": "112276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "LoginTest"}]}