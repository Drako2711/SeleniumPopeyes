{"name": "Agregar nueva dirección", "status": "failed", "statusDetails": {"message": "AssertionError: Ocurrió un problema al confirmar el mensaje dirección correctamente configurada", "trace": "self = <[AttributeError(\"'Login' object has no attribute '_testMethodName'\") raised in repr()] Login object at 0x1a7576323d0>\n\n    def validateAddress(self):\n        msgError = 'Ocurrió un problema al confirmar el mensaje dirección correctamente configurada'\n        selectorPath = '//p[contains(text(),\"Tu dirección ha sido configurada correctamente.\")]'\n        try:\n            element_present = EC.presence_of_element_located((By.XPATH, selectorPath))\n>           WebDriverWait(self.driver, 20).until(element_present)\n\n..\\PopeyesPage\\LoginPage.py:216: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8354a072170b2b7f92fdee9e460e7eab\")>, method = <function presence_of_element_located.<locals>._predicate at 0x000001A75757E9D0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x006E9943+2595139]\nE       \tOrdinal0 [0x0067C9F1+2148849]\nE       \tOrdinal0 [0x00574528+1066280]\nE       \tOrdinal0 [0x005A0FD4+1249236]\nE       \tOrdinal0 [0x005A11CB+1249739]\nE       \tOrdinal0 [0x005CD812+1431570]\nE       \tOrdinal0 [0x005BBA34+1358388]\nE       \tOrdinal0 [0x005CBAF2+1424114]\nE       \tOrdinal0 [0x005BB806+1357830]\nE       \tOrdinal0 [0x00596086+1204358]\nE       \tOrdinal0 [0x00596F96+1208214]\nE       \tGetHandleVerifier [0x0088B232+1658114]\nE       \tGetHandleVerifier [0x0094312C+2411516]\nE       \tGetHandleVerifier [0x0077F261+560433]\nE       \tGetHandleVerifier [0x0077E366+556598]\nE       \tOrdinal0 [0x0068286B+2173035]\nE       \tOrdinal0 [0x006875F8+2192888]\nE       \tOrdinal0 [0x006876E5+2193125]\nE       \tOrdinal0 [0x006911FC+2232828]\nE       \tBaseThreadInitThunk [0x767FFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x772C7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x772C7A6E+238]\n\nC:\\Users\\artur\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <UnitTestPopeyes.PopeyesTests.LoginTest.LoginAccount testMethod=test_04_login_add>\n\n    @allure.title(u\"Agregar nueva dirección\")\n    @allure.description(u\"Se requiere agregar una nueva dirección\")\n    @allure.story(u'Dirección')\n    def test_04_login_add(self):\n        self.test_02_login()\n        with allure.step(u\"Seleccionamos nueva dirección\"):\n            self.loginPage.clickAddAddress()\n        with allure.step(u\"Ingresamos la dirección de prueba\"):\n            self.loginPage.searchAddress(\"Av. Inca Garcilaso de la Vega 1698, Cercado de Lima, Perú\") #Dirección\n        with allure.step(u\"Ingresamos los datos restantes\"):\n            self.loginPage.addDataAddress(\"Casa\",\"998753545\",\"Referencia\", \"Casa\", False, False, False) #Tipo, Telefono, Referencia, Guardar como, Promociones, Predeterminada, Manzana y Lote\n        with allure.step(u\"Validamos la configuración de la dirección\"):\n>           self.loginPage.validateAddress()\n\nLoginTest.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'Login' object has no attribute '_testMethodName'\") raised in repr()] Login object at 0x1a7576323d0>\n\n    def validateAddress(self):\n        msgError = 'Ocurrió un problema al confirmar el mensaje dirección correctamente configurada'\n        selectorPath = '//p[contains(text(),\"Tu dirección ha sido configurada correctamente.\")]'\n        try:\n            element_present = EC.presence_of_element_located((By.XPATH, selectorPath))\n            WebDriverWait(self.driver, 20).until(element_present)\n            self.assertTrue(self.is_element_present(By.XPATH, selectorPath),msgError)\n        except TimeoutException:\n>           assert False, msgError\nE           AssertionError: Ocurrió un problema al confirmar el mensaje dirección correctamente configurada\n\n..\\PopeyesPage\\LoginPage.py:219: AssertionError"}, "description": "Se requiere agregar una nueva dirección", "steps": [{"name": "Iniciar el controlador de Chrome", "status": "passed", "start": 1646685908283, "stop": 1646685915558}, {"name": "Accedemos a la página de inicio de sesión", "status": "passed", "start": 1646685915558, "stop": 1646685920184}, {"name": "Ingresamos las credenciales de inicio de sesión con cuenta nativa", "status": "passed", "start": 1646685920184, "stop": 1646685920300}, {"name": "Validamos el inicio de sesión", "status": "passed", "start": 1646685920300, "stop": 1646685925024}, {"name": "Seleccionamos nueva dirección", "status": "passed", "start": 1646685925024, "stop": 1646685925062}, {"name": "Ingresamos la dirección de prueba", "status": "passed", "start": 1646685925062, "stop": 1646685928062}, {"name": "Ingresamos los datos restantes", "status": "passed", "start": 1646685928062, "stop": 1646685932611}, {"name": "Validamos la configuración de la dirección", "status": "failed", "statusDetails": {"message": "AssertionError: Ocurrió un problema al confirmar el mensaje dirección correctamente configurada\n", "trace": "  File \"D:\\PROYECTOS CICLO IX\\SELENIUM\\PopeyesPruebas\\UnitTestPopeyes\\PopeyesTests\\LoginTest.py\", line 121, in test_04_login_add\n    self.loginPage.validateAddress()\n  File \"D:\\PROYECTOS CICLO IX\\SELENIUM\\PopeyesPruebas\\UnitTestPopeyes\\PopeyesPage\\LoginPage.py\", line 219, in validateAddress\n    assert False, msgError\n"}, "start": 1646685932611, "stop": 1646685963661}], "attachments": [{"name": "log", "source": "4be3a65b-b019-4d7f-889f-0ffde737af37-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "fc065dbc-74fb-471d-90ae-d2fcbe4f14ac-attachment.txt", "type": "text/plain"}], "start": 1646685908283, "stop": 1646685965767, "uuid": "7f6ffe3f-863a-4823-bf8f-fe951bc9f395", "historyId": "702ebf9aeab2e570dab668d7c8b6d687", "testCaseId": "4c2e456b61586b4678548613bb7ccd7e", "fullName": "LoginTest.LoginAccount#test_04_login_add", "labels": [{"name": "feature", "value": "Log in"}, {"name": "story", "value": "Dirección"}, {"name": "suite", "value": "LoginTest"}, {"name": "subSuite", "value": "LoginAccount"}, {"name": "host", "value": "DESKTOP-FT84D78"}, {"name": "thread", "value": "12704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "LoginTest"}]}